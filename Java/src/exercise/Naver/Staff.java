package exercise.Naver;





//        4-1-0: '매장 직원'은 '고객'에게 신발가격 결제를 안내합니다.
//        4-1-1: '고객'은 결제를 진행합니다.
//        4-1-2: '매장 직원'은 자신의 매상에 돈을 더합니다.
//        4-1-3: '매장 직원'은 운동화를 찾아 '고객'에게 전달합니다.
//        4-1-4: '고객'은 신규 구매한 Nike 브랜드의 운동화를 신고, 운동화의 특징(편안함| 가벼움 등)을 경험하며 기분이 좋아집니다. 자신의 상태를 말하고 상황이 종료됩니다.
//        5. '매장 직원'은 '고객'에게 재고 부족을 안내하고 물품배송 요청 여부를 안내합니다.
//        5-1: 만약 '고객'의 배송 주문을 선호하지 않는 사람일 경우
//        5-1-0: '고객'은 '다음에 올게요'라고 하고 자신의 상태를 말하고 상황이 종료됩니다.
//        6. '고객'의 배송 주문을 선호하는 사람일 경우, '고객'은 주문 계속 진행합니다.
//        6-0:	'매장 직원'은 '고객'에게 신발가격 결제를 안내합니다.
//        6-1: '고객'은 결제를 진행합니다.
//        6-2: '매장 직원'은 자신의 매상에 돈을 더합니다.
//        6-3: '매장 직원'은 운동화를 배송하기 위해 '배송 담당자'에게  Nike 운동화 요청합니다.
//        6-4: '배송 담당자'는 택배 패키지의 배송 예정소요 일자와 배송료를 '매장직원'에게 응답 해줍니다.
//        6-5: '매장 직원'은 배송 예정 소요일자와 배송료를 말해주고, 배송료 + 신발가격을 '고객'에게 전달합니다.
//        6-5-1: 만약 배송료 + 신발가격이 고객의 잔고보다 많은 경우
//        6-5-1-0: '고객'은 신발 가격을 환불 요청합니다.
//        6-5-1-1: '매장 직원'은 신발 가격을 다시 매상에서 빼고, '고객'은 환불 받습니다.
//        6-5-1-2 '고객'은 '다음에 올게요'라고 하고 자신의 상태를 말하고 상황이 종료됩니다.
//        6-5-2: 만약 배송료 + 신발가격이 고객의 잔고보다 많지 않은 경우
//        6-5-2-0: '고객'은 주문 계속 진행합니다.
//        6-5-2-1: '배송 담당자'는 Nike 운동화 요청 받아 운동화가 들어있는 택배 패키지를 만듭니다.
//        6-5-2-2: '배송 담당자'는 '고객'에게 택배 패키지를 전달합니다.
//        6-5-2-3: '고객'은 '배송 담당자' 에게 배송료를 지불합니다.
//        6-5-2-4: '배송 담당자'는 '자신의 매상'에 돈을 더합니다.
//        6-5-2-5: '고객'은 택배 패키지의 운동화를 신고, 운동화의 특징(편안함| 가벼움 등)을 경험하며 기분이 좋아집니다. 자신의 상태를 말하고 상황이 종료됩니다.

public class Staff {
    //Staff: 자신의 매상
    protected long staffCashAmount;
    //나이키 운동화 정보
    protected long NikeShoesInfo;
    //운동화 재고 보유 여부
    boolean havingNikeSneakersInStore; // 매장 Nike sneakers 재고 여부

    String nikeSneakersFeature = "안정감"; // 안정감 | 편안함 | 가벼움 등 신발 특징

//        2. '매장 직원'은 Nike 운동화를 확인하고, 해당 운동화의 특징(편안함|가벼움 등)과 가격을 자세히 설명해줍니다.

    public void checkNikeShoes(String NikeShoes,long nikeSneakersPrice){
        System.out.printf("직원: 이 운동화 %s 특징과 %s 원 가격을 가지고 있습니다.\n" , nikeSneakersFeature ,nikeSneakersPrice) ;
    }

    public void setStaffCashAmount(long staffCashAmount) {
        this.staffCashAmount = staffCashAmount;
    }

    //  '매장 직원'은 Nike 브랜드의 운동화의 재고 여부를 확인합니다.
    public void checkHavingShoes(boolean nikeShoes) {
        if (nikeShoes == true) {
           System.out.println("직원: 현재 매장에 재고가 존재하네요. 바로 주문 진행가능합니다.");

        }
    }
    //        4-1-0: '매장 직원'은 '고객'에게 신발가격 결제를 안내합니다.

    public void addAmount(long money){
        this.staffCashAmount += money;
        System.out.printf("직원: 고객님 신발 주문 도와드리겠습니다. %d 원 입니다.", money);
    }
    //4-1-3: '매장 직원'은 운동화를 찾아 '고객'에게 전달합니다.
    public void shoesDelivery(String nikeShoes){
        System.out.println("신발 여기 있습니다.");

    }
}
